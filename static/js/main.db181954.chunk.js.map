{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","style","backgroundColor","color","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","role","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.db181954.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode === 'light'? 'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"  >Enable dark Mode</label>\r\n</div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n};\r\n\r\nNavbar.defaultProps = {\r\n    title: 'title here',\r\n    aboutText: 'About text here'\r\n  };\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"converted to uppercase!\",\"success\");\r\n    }\r\n    const handleLoClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"converted to lowercase!\",\"success\");\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy = ()=>{\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"copied to clipboard!\",\"success\");\r\n    }\r\n    const handleExtraSpaces = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"extra spaces removed!\",\"success\");\r\n    }\r\n    const handleClear = ()=>{\r\n        setText('');\r\n        props.showAlert(\"text cleared!\",\"success\");\r\n    }\r\n    const [text,setText] = useState('');\r\n    return (\r\n        <>\r\n        <div className={`text-${props.mode === 'light'?'dark':'light'}`}>\r\n            <h1 >{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" style={{backgroundColor : props.mode === 'light'?'white':'#545454',color: props.mode==='light'?'black':'white'}} value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary m-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary m-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary m-1\" onClick={handleClear}>Clear Text</button>\r\n            <button className=\"btn btn-primary m-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary m-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n            \r\n            \r\n            \r\n        </div>\r\n        <div className={`container my-3 text-${props.mode === 'light'?'dark':'light'}`}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} minutes to read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0 ? text: 'Enter text above to preview here'}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props){\r\n    // const capitalise = (word)=>{\r\n    //     const lower = word.toLowerCase();\r\n    //     return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    // }\r\n    // let type = capitalise(props.alert.type);\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{props.alert.type}</strong> {props.alert.msg}\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Alert;","// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, {  useState } from 'react';\nimport Alert from './components/Alert';\n// import { Fragment} from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Routes\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  \n  const showAlert = (message,type) =>{\n      setAlert({\n          msg: message,\n          type: type\n      });\n      setTimeout(() => {\n        setAlert('null');\n      }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#03203c';\n      showAlert('Dark mode has been enabled','success');\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode has been enabled','success');\n    }\n  }\n  return (\n   <>\n    {/* <Router> */}\n      {/* <Fragment> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n         <Alert alert={alert}/>\n        <div className=\"container my-3 mx-auto\">\n        {/* <Routes> */}\n          {/* <Route exact path=\"/about\" element={<About/>}/> */}\n          {/* <Route exact path=\"/\" */}\n             {/* element={ */}\n               <TextForm  showAlert={showAlert} heading=\"Enter text here to analyze\" mode={mode}/>\n                {/* } /> */}\n        {/* </Routes> */}\n  </div> \n  {/* </Fragment> */}\n  {/* </Router> */}\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}